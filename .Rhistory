post <- post/sum(post)
post
samps <- sample(p_grid, 1e4, replace = T, prob = post)
HPDI(p, c(50,89,97))
HPDI(samps, c(50,89,97))
samps
dens(post)
dens(samps)
dens(samps, xlim = c(0,1))
p_grid <- seq(0,1, l = 1000)
post <- dbinom(sum(c(birth1 + birth2)), length(c(birth1, birth2)), prob = p_grid) * rep(1, 1000)
post <- post/sum(post)
samps <- sample(p_grid, 1e4, replace = T, prob = post)
dens(samps, xlim = c(0,1))
HPDI(samps, c(50,89,97))
HPDI(samps,50)
HPDI(samps, .5)
HPDI(samps, 50)
HPDI(samps, 75)
HPDI(samps, 95)
length(c(birth1, birth2))
sum(c(birth1 + birth2))
post <- dbinom(sum(c(birth1 + birth2)), length(c(birth1, birth2)), prob = p_grid)
lik <- dbinom(sum(c(birth1 + birth2)), length(c(birth1, birth2)), prob = p_grid)
post <- lik*rep(1,length(p_grid))
post <- post/sum(post)
samps <- sample(p_grid, 1e4, replace = T, prob = post)
dens(samps, xlim = c(0,1))
HPDI(samps, prob = .5)
HPDI(samps, prob = c(.5, .89, .97))
HPDI(p, prob = c(.5, .89, .97))
mod <- cmdstan_model("stan_models/c3m1.stan")
# put the data into a list
dat <- list(
N = 1,
y = sum(c(birth1, birth2)),
n = length(c(birth1, birth2))
)
# fit the model
fit <- mod$sample(
data = dat,
chains = 4,
parallel_chains = 4,
show_messages = F
)
p <- fit$draws("p", format = "df")$p
plot(density(p), xlim = c(0,1))
map(p)
mod <- cmdstan_model("stan_models/c3m1.stan")
# put the data into a list
dat <- list(
N = 1,
y = sum(c(birth1, birth2)),
n = length(c(birth1, birth2))
)
# fit the model
fit <- mod$sample(
data = dat,
chains = 4,
parallel_chains = 4,
show_messages = F
)
p <- fit$draws("p", format = "df")$p
plot(density(p), xlim = c(0,1))
p_grid <- seq(0,1, l = 1000)
lik <- dbinom(sum(c(birth1 + birth2)), length(c(birth1, birth2)), prob = p_grid)
post <- lik*rep(1,length(p_grid))
post <- post/sum(post)
samps <- sample(p_grid, 1e4, replace = T, prob = post)
dens(samps, xlim = c(0,1))
HPDI(samps, prob = c(.5, .89, .97))
HPDI(p, prob = c(.5, .89, .97))
HPDI(p, c(50,89,97))
p_grid <- seq(0,1, l = 1000)
lik <- dbinom(sum(c(birth1 + birth2)), length(c(birth1, birth2)), prob = p_grid)
post <- lik*rep(1,length(p_grid))
post <- post/sum(post)
samps <- sample(p_grid, 1e4, replace = T, prob = post)
dens(samps, xlim = c(0,1))
HPDI(samps, prob = c(.5, .89, .97))
HPDI(p, c(50,89,97))
HPDI(p, c(.50,.89,.97))
HPDI(samps, prob = c(.5, .89, .97))
HPDI(p, c(.50,.89,.97))
p_grid <- seq(0,1, l = 1000)
lik <- dbinom(sum(c(birth1 + birth2)), length(c(birth1, birth2)), prob = p_grid)
post <- lik*rep(1,length(p_grid))
post <- post/sum(post)
samps <- sample(p_grid, 1e4, replace = T, prob = post)
dens(samps, xlim = c(0,1))
HPDI(samps, prob = c(.5, .89, .97))
HPDI(p, c(.50,.89,.97))
girl_first <- sum(birth1==0)
reps <- rbinom(1e4, girl_first, prob = sample(p, 1e4, replace = T))
girl_boy <- sum(birth1==0 & birth2==1)
hist(reps)
abline(v = girl_boy, col = "red", lwd = 3)
sigma <- runif(1000, 0, 10)
mu <- rnorm(1000, 0, 10)
y <- rnorm(mu, sigma)
hist(sigma)
hist(mu)
hist(y)
alist(
y ~ dnorm(mu, sigma),
mu ~ dnorm(0, 10),
sigma ~ dunif(0,10)
)
# center year so that it is (-1, 0, 1)
# standardize height measurements so that they have a mean of 0 and a stdv of 1
n <- 100
a <- rnorm(n,0, .5)
b <- rnorm(n,.5, .5)
y <- matrix(nrow = n, ncol = 3)
sigma <- rnorm(n, 0, .25)
for(i in 1:3){
y[,i] <- rnorm(n, a + b*(i-2), exp(sigma))
}
hist(y)
abline(v = quantile(y,c(.025, .975)),
col = "red")
year <- c(-1,0,1)
plot(apply(y,2,mean) ~ year, type = "l")
a <- rnorm(n,120, 10)
b <- rnorm(n,2,.5)
sigma <- rnorm(n,0, 1)
y <- matrix(nrow = n, ncol = 3)
for(i in 1:3){
y[,i] <- rnorm(n, a + b*(i-2), exp(sigma))
}
hist(y)
plot(apply(y, 2, mean) ~ year, type = "l")
hist(replicate(1e4, max(exp(rnorm(100, 0, .5)))))
library(rethinking)
data(Howell1)
d <- Howell1
d
stn <- function(x) (x - mean(x))/sd(x)
unique(d$height)
rstan:::rstudio_stanc("problems/chapter_4/stan_models/height_mod.stan")
mod_h1 <- cmdstan_model("stan_models/height_mod.stan")
fit <- mod_h1$sample(
data = dat,
chains = 4,
parallel_chains = 4
)
dat <- list(
N = nrow(d),
weight = stn(d$weight),
height = stn(d$height)
)
library(rethinking)
library(cmdstanr)
data(Howell1)
d <- Howell1
stn <- function(x) (x - mean(x))/sd(x)
dat <- list(
N = nrow(d),
weight = stn(d$weight),
height = stn(d$height)
)
fit <- mod_h1$sample(
data = dat,
chains = 4,
parallel_chains = 4
)
fit$diagnostic_summary()
fit
alpha <- fit$draws("a", format = "df")$a
beta <- fit$draws("b", format = "df")$b
sigma <- fit$draws("sigma", format = "df")$sigma
weight_obs <- c(46.95, 43.72, 64.78, 32.59, 54.63)
sapply(weight_obs, function(x) rnorm(1, alpha + beta * x, sigma))
sapply(weight_obs, function(x) rnorm(length(alpha), alpha + beta * x, sigma))
obs_stn <- (weight_obs - mean(d$weight))/sd(d$weight)
sapply(weight_obs, function(x) rnorm(length(alpha), alpha + beta * x, sigma))
sapply(obs_stn, function(x) rnorm(length(alpha), alpha + beta * x, sigma))
height_pred_stn <- sapply(obs_stn, function(x) rnorm(length(alpha), alpha + beta * x, sigma))
height_pred <- height_pred_stn * sd(d$height) + mean(d$height)
colnames(height_pred) <- weight_obs
height_pred
data.frame(height_pred)
data.frame(height_pred)
colnames(height_pred) <- weight_obs
height_pred
data.frame(height_pred)
library(rethinking)
library(cmdstanr)
data(Howell1)
d <- Howell1
stn <- function(x) (x - mean(x))/sd(x)
dat <- list(
N = nrow(d),
weight = stn(d$weight),
height = stn(d$height)
)
mod_h1 <- cmdstan_model("stan_models/height_mod.stan")
fit <- mod_h1$sample(
data = dat,
chains = 4,
parallel_chains = 4
)
alpha <- fit$draws("a", format = "df")$a
beta <- fit$draws("b", format = "df")$b
sigma <- fit$draws("sigma", format = "df")$sigma
weight_obs <- c(46.95, 43.72, 64.78, 32.59, 54.63)
obs_stn <- (weight_obs - mean(d$weight))/sd(d$weight)
height_pred_stn <- sapply(obs_stn, function(x) rnorm(length(alpha), alpha + beta * x, sigma))
height_pred <- height_pred_stn * sd(d$height) + mean(d$height)
data.frame(height_pred)
colnames(height_pred) <- weight_obs
height_pred <- data.frame(height_pred)
colnames(height_pred) <- weight_obs
height_pred
library(tidyverse)
height_pred %>%
pivot_longer(1:5, names_to = "weight",
values_to = "height_pred") %>%
mutate(weight = as.numeric(weight))
HPDI(height_pred[,1], .5)
HPDI(height_pred[,1], .5)[1]
height_pred %>%
pivot_longer(1:5, names_to = "weight",
values_to = "height_pred") %>%
mutate(weight = as.numeric(weight)) %>%
group_by(weight) %>%
summarise(mu = mean(height_pred),
lwr = HPDI(height_pred)[1],
upr = HPDI(height_pred)[2])
height_pred %>%
pivot_longer(1:5, names_to = "weight",
values_to = "height_pred") %>%
mutate(weight = as.numeric(weight)) %>%
group_by(weight) %>%
summarise(mu = mean(height_pred),
lwr = HPDI(height_pred, .89)[1],
upr = HPDI(height_pred, .89)[2])
height_pred %>%
pivot_longer(1:5, names_to = "weight",
values_to = "height_pred") %>%
mutate(weight = as.numeric(weight)) %>%
group_by(weight) %>%
summarise(mu = mean(height_pred),
lwr = HPDI(height_pred, .89)[1],
upr = HPDI(height_pred, .89)[2]) %>%
round(2)
d
d %>%
filter(age < 18)
mod <- cmdstan_model("stan_models/height_mod.stan")
mod <- cmdstan_model("stan_models/height_mod.stan")
d_young <- d %>%
filter(age < 18)
d_young <- d %>%
filter(age < 18)
dat <- list(
N = nrow(d_young),
weight = stn(d_young$weight),
height = stn(d_young$height)
)
fit <- mod$sample(
data = dat,
chains = 4,
parallel_chains = 4
)
library(rethinking)
library(cmdstanr)
library(tidyverse)
data(Howell1)
d <- Howell1
stn <- function(x) (x - mean(x))/sd(x)
dat <- list(
N = nrow(d),
weight = stn(d$weight),
height = stn(d$height)
)
mod <- cmdstan_model("stan_models/height_mod.stan")
fit_h1 <- mod$sample(
data = dat,
chains = 4,
parallel_chains = 4
)
alpha <- fit_h1$draws("a", format = "df")$a
beta <- fit_h1$draws("b", format = "df")$b
sigma <- fit_h1$draws("sigma", format = "df")$sigma
weight_obs <- c(46.95, 43.72, 64.78, 32.59, 54.63)
obs_stn <- (weight_obs - mean(d$weight))/sd(d$weight)
height_pred_stn <- sapply(obs_stn, function(x) rnorm(length(alpha), alpha + beta * x, sigma))
height_pred <- height_pred_stn * sd(d$height) + mean(d$height)
height_pred <- data.frame(height_pred)
colnames(height_pred) <- weight_obs
height_pred %>%
pivot_longer(1:5, names_to = "weight",
values_to = "height_pred") %>%
mutate(weight = as.numeric(weight)) %>%
group_by(weight) %>%
summarise(mu = mean(height_pred),
lwr = HPDI(height_pred, .89)[1],
upr = HPDI(height_pred, .89)[2]) %>%
round(2)
library(rethinking)
library(cmdstanr)
library(tidyverse)
data(Howell1)
d <- Howell1
stn <- function(x) (x - mean(x))/sd(x)
dat <- list(
N = nrow(d),
weight = stn(d$weight),
height = stn(d$height)
)
mod <- cmdstan_model("stan_models/height_mod.stan")
fit_h1 <- mod$sample(
data = dat,
chains = 4,
parallel_chains = 4,
show_messages = F
)
alpha <- fit_h1$draws("a", format = "df")$a
beta <- fit_h1$draws("b", format = "df")$b
sigma <- fit_h1$draws("sigma", format = "df")$sigma
weight_obs <- c(46.95, 43.72, 64.78, 32.59, 54.63)
obs_stn <- (weight_obs - mean(d$weight))/sd(d$weight)
height_pred_stn <- sapply(obs_stn, function(x) rnorm(length(alpha), alpha + beta * x, sigma))
height_pred <- height_pred_stn * sd(d$height) + mean(d$height)
height_pred <- data.frame(height_pred)
colnames(height_pred) <- weight_obs
height_pred %>%
pivot_longer(1:5, names_to = "weight",
values_to = "height_pred") %>%
mutate(weight = as.numeric(weight)) %>%
group_by(weight) %>%
summarise(mu = mean(height_pred),
lwr = HPDI(height_pred, .89)[1],
upr = HPDI(height_pred, .89)[2]) %>%
round(2)
fit <- mod$sample(
data = dat,
chains = 4,
parallel_chains = 4,
show_messages = F
)
d_young <- d %>%
filter(age < 18)
dat <- list(
N = nrow(d_young),
weight = stn(d_young$weight),
height = stn(d_young$height)
)
fit <- mod$sample(
data = dat,
chains = 4,
parallel_chains = 4,
show_messages = F
)
mean(fit$draws("b", format = "df")$b)
d_young <- d %>%
filter(age < 18)
dat <- list(
N = nrow(d_young),
weight = stn(d_young$weight),
height = stn(d_young$height)
)
fit <- mod$sample(
data = dat,
chains = 4,
parallel_chains = 4,
show_messages = F
)
mean(fit$draws("b", format = "df")$b)
rstan:::rstudio_stanc("problems/chapter_4/stan_models/height_mod.stan")
rstan:::rstudio_stanc("problems/chapter_4/stan_models/height_mod.stan")
mod <- cmdstan_model("stan_models/height_mod.stan")
library(rethinking)
library(cmdstanr)
library(tidyverse)
data(Howell1)
d <- Howell1
stn <- function(x) (x - mean(x))/sd(x)
dat <- list(
N = nrow(d),
weight = stn(d$weight),
height = stn(d$height)
)
mod <- cmdstan_model("stan_models/height_mod.stan")
fit_h1 <- mod$sample(
data = dat,
chains = 4,
parallel_chains = 4,
show_messages = F
)
alpha <- fit_h1$draws("a", format = "df")$a
beta <- fit_h1$draws("b", format = "df")$b
sigma <- fit_h1$draws("sigma", format = "df")$sigma
weight_obs <- c(46.95, 43.72, 64.78, 32.59, 54.63)
obs_stn <- (weight_obs - mean(d$weight))/sd(d$weight)
height_pred_stn <- sapply(obs_stn, function(x) rnorm(length(alpha), alpha + beta * x, sigma))
height_pred <- height_pred_stn * sd(d$height) + mean(d$height)
height_pred <- data.frame(height_pred)
colnames(height_pred) <- weight_obs
height_pred %>%
pivot_longer(1:5, names_to = "weight",
values_to = "height_pred") %>%
mutate(weight = as.numeric(weight)) %>%
group_by(weight) %>%
summarise(mu = mean(height_pred),
lwr = HPDI(height_pred, .89)[1],
upr = HPDI(height_pred, .89)[2]) %>%
round(2)
d_young <- d %>%
filter(age < 18)
dat <- list(
N = nrow(d_young),
weight = stn(d_young$weight),
height = stn(d_young$height)
)
fit <- mod$sample(
data = dat,
chains = 4,
parallel_chains = 4,
show_messages = F
)
mean(fit$draws("b", format = "df")$b)
y_pred <- fit$draws("y_pred", format = "df")[,1:nrow(d_young)]
a <- fit$draws("a", format = "df")$a
b <- fit$draws("b", format = "df")$b
means <- a + b * d_young$weight
means <- sapply(d_young$weight, function(x) a + b * x)
means
mu_means <- apply(means, 2, mean)
mu_mean
mu_means
upr_means <- apply(means, 2, function(x) HDPI(x, .89)[2])
upr_means <- apply(means, 2, function(x) HPDI(x, .89)[2])
upr_means
lwr_means <- apply(means, 2, function(x) HPDI(x, .89)[1])
upr_pred <- apply(y_pred, 2, function(x) HPDI(x, .89)[2])
lwr_pred <- apply(y_pred, 2, function(x) HPDI(x, .89)[1])
means <- sapply(d_young$weight, function(x) a + b * x) * sd(d_young$height) + mean(d_young$height)
means
sapply(d_young$weight, function(x) a + b * x)
hist(means)
hist(b)
hist(a)
means <- sapply(stn(d_young$weight), function(x) a + b * x) * sd(d_young$height) + mean(d_young$height)
hist(means)
means <- sapply(stn(d_young$weight), function(x) a + b * x) * sd(d_young$height) + mean(d_young$height)
mu_means <- apply(means, 2, mean)
upr_means <- apply(means, 2, function(x) HPDI(x, .89)[2])
lwr_means <- apply(means, 2, function(x) HPDI(x, .89)[1])
y_pred <- fit$draws("y_pred", format = "df")[,1:nrow(d_young)] * sd(d_young$height) + mean(d_young$height)
upr_pred <- apply(y_pred, 2, function(x) HPDI(x, .89)[2])
lwr_pred <- apply(y_pred, 2, function(x) HPDI(x, .89)[1])
data.frame(weight = d_young$weight, height = d_young$height)
data.frame(weight = d_young$weight, height = d_young$height, means, upr_means,
lwr_means, upr_pred, lwr_pred)
upr_pred
lwr_pred
lwr_means
upr_means
mu_means
data.frame(weight = d_young$weight, height = d_young$height, means, upr_means,
lwr_means, upr_pred, lwr_pred)
data.frame(weight = d_young$weight, height = d_young$height, mu_means, upr_means,
lwr_means, upr_pred, lwr_pred)
data.frame(weight = d_young$weight, height = d_young$height, mu_means, upr_means,
lwr_means, upr_pred, lwr_pred) %>%
ggplot(aes(x = weight, y = height)) +
geom_point()
data.frame(weight = d_young$weight, height = d_young$height, mu_means, upr_means,
lwr_means, upr_pred, lwr_pred) %>%
ggplot(aes(x = weight, y = height)) +
geom_point() +
geom_line(aes(x = weight, y = mu_means))
data.frame(weight = d_young$weight, height = d_young$height, mu_means, upr_means,
lwr_means, upr_pred, lwr_pred) %>%
ggplot(aes(x = weight, y = height)) +
geom_point() +
geom_line(aes(x = weight, y = mu_means), linewidth = 1)
data.frame(weight = d_young$weight, height = d_young$height, mu_means, upr_means,
lwr_means, upr_pred, lwr_pred) %>%
ggplot(aes(x = weight, y = height)) +
geom_point() +
geom_line(aes(x = weight, y = mu_means), linewidth = 1) +
geom_ribbon(aes(x = weight, ymax = upr_means, ymin = lwr_means))
data.frame(weight = d_young$weight, height = d_young$height, mu_means, upr_means,
lwr_means, upr_pred, lwr_pred) %>%
ggplot(aes(x = weight, y = height)) +
geom_point() +
geom_line(aes(x = weight, y = mu_means), linewidth = 1) +
geom_ribbon(aes(x = weight, ymax = upr_means, ymin = lwr_means),
color = "grey", alpha = .25)
data.frame(weight = d_young$weight, height = d_young$height, mu_means, upr_means,
lwr_means, upr_pred, lwr_pred) %>%
ggplot(aes(x = weight, y = height)) +
geom_point() +
geom_line(aes(x = weight, y = mu_means), linewidth = 1) +
geom_ribbon(aes(x = weight, ymax = upr_means, ymin = lwr_means),
color = "grey", alpha = .25) +
geom_ribbon(aes(x = weight, ymax = upr_pred, ymin = lwr_pred),
color = "grey", alpha = .25) +
theme_classic()
data.frame(weight = d_young$weight, height = d_young$height, mu_means, upr_means,
lwr_means, upr_pred, lwr_pred) %>%
ggplot(aes(x = weight, y = height)) +
geom_point() +
geom_line(aes(x = weight, y = mu_means), linewidth = .75) +
geom_ribbon(aes(x = weight, ymax = upr_means, ymin = lwr_means),
color = "grey", alpha = .25) +
geom_ribbon(aes(x = weight, ymax = upr_pred, ymin = lwr_pred),
color = "grey", alpha = .25) +
theme_classic()
